{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _jsxFileName = \"E:\\\\Vijay_S\\\\Paresh\\\\ReactNativeApp\\\\node_modules\\\\react-native-material-textfield\\\\src\\\\components\\\\affix\\\\index.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Affix = function (_PureComponent) {\n  (0, _inherits2.default)(Affix, _PureComponent);\n\n  var _super = _createSuper(Affix);\n\n  function Affix(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Affix);\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n        active = _this$props.active,\n        focused = _this$props.focused;\n    _this.state = {\n      opacity: new _reactNative.Animated.Value(active || focused ? 1 : 0)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Affix, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var opacity = this.state.opacity;\n      var _this$props2 = this.props,\n          active = _this$props2.active,\n          focused = _this$props2.focused,\n          animationDuration = _this$props2.animationDuration;\n\n      if (focused ^ props.focused || active ^ props.active) {\n        _reactNative.Animated.timing(opacity, {\n          toValue: props.active || props.focused ? 1 : 0,\n          duration: animationDuration\n        }).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var opacity = this.state.opacity;\n      var _this$props3 = this.props,\n          style = _this$props3.style,\n          children = _this$props3.children,\n          type = _this$props3.type,\n          fontSize = _this$props3.fontSize,\n          color = _this$props3.baseColor;\n      var containerStyle = {\n        height: fontSize * 1.5,\n        opacity: opacity\n      };\n      var textStyle = {\n        color: color,\n        fontSize: fontSize\n      };\n\n      switch (type) {\n        case 'prefix':\n          containerStyle.paddingRight = 8;\n          textStyle.textAlign = 'left';\n          break;\n\n        case 'suffix':\n          containerStyle.paddingLeft = 8;\n          textStyle.textAlign = 'right';\n          break;\n      }\n\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [_styles.default.container, containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Animated.Text, {\n        style: [style, textStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, children));\n    }\n  }]);\n  return Affix;\n}(_react.PureComponent);\n\nexports.default = Affix;\nAffix.defaultProps = {\n  numberOfLines: 1,\n  active: false,\n  focused: false\n};\nAffix.propTypes = {\n  numberOfLines: _propTypes.default.number,\n  active: _propTypes.default.bool,\n  focused: _propTypes.default.bool,\n  type: _propTypes.default.oneOf(['prefix', 'suffix']).isRequired,\n  fontSize: _propTypes.default.number.isRequired,\n  baseColor: _propTypes.default.string.isRequired,\n  animationDuration: _propTypes.default.number.isRequired,\n  style: _reactNative.Animated.Text.propTypes.style,\n  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node])\n};","map":{"version":3,"sources":["E:/Vijay_S/Paresh/ReactNativeApp/node_modules/react-native-material-textfield/src/components/affix/index.js"],"names":["Affix","props","active","focused","state","opacity","Animated","Value","animationDuration","timing","toValue","duration","start","style","children","type","fontSize","color","baseColor","containerStyle","height","textStyle","paddingRight","textAlign","paddingLeft","styles","container","PureComponent","defaultProps","numberOfLines","propTypes","PropTypes","number","bool","oneOf","isRequired","string","Text","oneOfType","arrayOf","node"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated } from 'react-native';\n\nimport styles from './styles';\n\nexport default class Affix extends PureComponent {\n  static defaultProps = {\n    numberOfLines: 1,\n\n    active: false,\n    focused: false,\n  };\n\n  static propTypes = {\n    numberOfLines: PropTypes.number,\n\n    active: PropTypes.bool,\n    focused: PropTypes.bool,\n\n    type: PropTypes.oneOf(['prefix', 'suffix']).isRequired,\n\n    fontSize: PropTypes.number.isRequired,\n    baseColor: PropTypes.string.isRequired,\n    animationDuration: PropTypes.number.isRequired,\n\n    style: Animated.Text.propTypes.style,\n\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n    ]),\n  };\n\n  constructor(props) {\n    super(props);\n\n    let { active, focused } = this.props;\n\n    this.state = {\n      opacity: new Animated.Value((active || focused)? 1 : 0),\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    let { opacity } = this.state;\n    let { active, focused, animationDuration } = this.props;\n\n    if ((focused ^ props.focused) || (active ^ props.active)) {\n      Animated\n        .timing(opacity, {\n          toValue: (props.active || props.focused)? 1 : 0,\n          duration: animationDuration,\n        })\n        .start();\n    }\n  }\n\n  render() {\n    let { opacity } = this.state;\n    let { style, children, type, fontSize, baseColor: color } = this.props;\n\n    let containerStyle = {\n      height: fontSize * 1.5,\n      opacity,\n    };\n\n    let textStyle = {\n      color,\n      fontSize,\n    };\n\n    switch (type) {\n      case 'prefix':\n        containerStyle.paddingRight = 8;\n        textStyle.textAlign = 'left';\n        break;\n\n      case 'suffix':\n        containerStyle.paddingLeft = 8;\n        textStyle.textAlign = 'right';\n        break;\n    }\n\n    return (\n      <Animated.View style={[styles.container, containerStyle]}>\n        <Animated.Text style={[style, textStyle]}>{children}</Animated.Text>\n      </Animated.View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}