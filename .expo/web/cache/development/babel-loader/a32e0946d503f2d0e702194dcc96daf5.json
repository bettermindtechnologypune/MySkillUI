{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _jsxFileName = \"E:\\\\Vijay_S\\\\Paresh\\\\ReactNativeApp\\\\node_modules\\\\react-native-material-textfield\\\\src\\\\components\\\\counter\\\\index.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Counter = function (_PureComponent) {\n  (0, _inherits2.default)(Counter, _PureComponent);\n\n  var _super = _createSuper(Counter);\n\n  function Counter() {\n    (0, _classCallCheck2.default)(this, Counter);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(Counter, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          count = _this$props.count,\n          limit = _this$props.limit,\n          baseColor = _this$props.baseColor,\n          errorColor = _this$props.errorColor,\n          fontSize = _this$props.fontSize,\n          style = _this$props.style;\n      var textStyle = {\n        color: count > limit ? errorColor : baseColor,\n        fontSize: fontSize\n      };\n\n      if (!limit) {\n        return null;\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        style: _styles.default.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: [_styles.default.text, style, textStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, count, \" / \", limit));\n    }\n  }]);\n  return Counter;\n}(_react.PureComponent);\n\nexports.default = Counter;\nCounter.propTypes = {\n  count: _propTypes.default.number.isRequired,\n  limit: _propTypes.default.number,\n  fontSize: _propTypes.default.number,\n  baseColor: _propTypes.default.string.isRequired,\n  errorColor: _propTypes.default.string.isRequired,\n  style: _reactNative.Text.propTypes.style\n};","map":{"version":3,"sources":["E:/Vijay_S/Paresh/ReactNativeApp/node_modules/react-native-material-textfield/src/components/counter/index.js"],"names":["Counter","props","count","limit","baseColor","errorColor","fontSize","style","textStyle","color","styles","container","text","PureComponent","propTypes","PropTypes","number","isRequired","string","Text"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;IAEqBA,O;;;;;;;;;;;;WAanB,kBAAS;AACP,wBAA+D,KAAKC,KAApE;AAAA,UAAMC,KAAN,eAAMA,KAAN;AAAA,UAAaC,KAAb,eAAaA,KAAb;AAAA,UAAoBC,SAApB,eAAoBA,SAApB;AAAA,UAA+BC,UAA/B,eAA+BA,UAA/B;AAAA,UAA2CC,QAA3C,eAA2CA,QAA3C;AAAA,UAAqDC,KAArD,eAAqDA,KAArD;AAEA,UAAIC,SAAS,GAAG;AACdC,QAAAA,KAAK,EAAEP,KAAK,GAAGC,KAAR,GAAeE,UAAf,GAA4BD,SADrB;AAEdE,QAAAA,QAAQ,EAARA;AAFc,OAAhB;;AAKA,UAAI,CAACH,KAAL,EAAY;AACV,eAAO,IAAP;AACD;;AAED,aACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEO,gBAAOC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE,CAACD,gBAAOE,IAAR,EAAcL,KAAd,EAAqBC,SAArB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,KADH,SACaC,KADb,CADF,CADF;AAOD;;;EAhCkCU,oB;;;AAAhBb,O,CACZc,S,GAAY;AACjBZ,EAAAA,KAAK,EAAEa,mBAAUC,MAAV,CAAiBC,UADP;AAEjBd,EAAAA,KAAK,EAAEY,mBAAUC,MAFA;AAIjBV,EAAAA,QAAQ,EAAES,mBAAUC,MAJH;AAMjBZ,EAAAA,SAAS,EAAEW,mBAAUG,MAAV,CAAiBD,UANX;AAOjBZ,EAAAA,UAAU,EAAEU,mBAAUG,MAAV,CAAiBD,UAPZ;AASjBV,EAAAA,KAAK,EAAEY,kBAAKL,SAAL,CAAeP;AATL,C","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { View, Text } from 'react-native';\n\nimport styles from './styles';\n\nexport default class Counter extends PureComponent {\n  static propTypes = {\n    count: PropTypes.number.isRequired,\n    limit: PropTypes.number,\n\n    fontSize: PropTypes.number,\n\n    baseColor: PropTypes.string.isRequired,\n    errorColor: PropTypes.string.isRequired,\n\n    style: Text.propTypes.style,\n  };\n\n  render() {\n    let { count, limit, baseColor, errorColor, fontSize, style } = this.props;\n\n    let textStyle = {\n      color: count > limit? errorColor : baseColor,\n      fontSize,\n    };\n\n    if (!limit) {\n      return null;\n    }\n\n    return (\n      <View style={styles.container}>\n        <Text style={[styles.text, style, textStyle]}>\n          {count} / {limit}\n        </Text>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}