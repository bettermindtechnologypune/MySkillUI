{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeMaterialRipple = _interopRequireDefault(require(\"react-native-material-ripple\"));\n\nvar _styles = require(\"./styles\");\n\nvar _jsxFileName = \"E:\\\\Vijay_S\\\\Paresh\\\\ReactNativeApp\\\\node_modules\\\\react-native-material-buttons\\\\src\\\\components\\\\button\\\\index.js\";\nvar _excluded = [\"color\", \"disabledColor\", \"shadeColor\", \"shadeOpacity\", \"shadeBorderRadius\", \"style\", \"children\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Button = function (_PureComponent) {\n  (0, _inherits2.default)(Button, _PureComponent);\n\n  var _super = _createSuper(Button);\n\n  function Button(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Button);\n    _this = _super.call(this, props);\n    _this.onPress = _this.onPress.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onPressIn = _this.onPressIn.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onPressOut = _this.onPressOut.bind((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      focusAnimation: _this.props.focusAnimation || new _reactNative.Animated.Value(0)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Button, [{\n    key: \"onPress\",\n    value: function onPress() {\n      var onPress = this.props.onPress;\n\n      if ('function' === typeof onPress) {\n        onPress();\n      }\n    }\n  }, {\n    key: \"onPressIn\",\n    value: function onPressIn() {\n      var focusAnimation = this.state.focusAnimation;\n      var focusAnimationDuration = this.props.focusAnimationDuration;\n\n      _reactNative.Animated.timing(focusAnimation, {\n        toValue: 1,\n        duration: focusAnimationDuration,\n        easing: _reactNative.Easing.out(_reactNative.Easing.ease)\n      }).start();\n    }\n  }, {\n    key: \"onPressOut\",\n    value: function onPressOut() {\n      var focusAnimation = this.state.focusAnimation;\n      var focusAnimationDuration = this.props.focusAnimationDuration;\n\n      _reactNative.Animated.timing(focusAnimation, {\n        toValue: 0,\n        duration: focusAnimationDuration,\n        easing: _reactNative.Easing.out(_reactNative.Easing.ease)\n      }).start();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var focusAnimation = props.focusAnimation;\n\n      if (focusAnimation && focusAnimation !== this.state.focusAnimation) {\n        this.setState({\n          focusAnimation: focusAnimation\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          disabledColor = _this$props.disabledColor,\n          shadeColor = _this$props.shadeColor,\n          shadeOpacity = _this$props.shadeOpacity,\n          shadeBorderRadius = _this$props.shadeBorderRadius,\n          style = _this$props.style,\n          children = _this$props.children,\n          props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);\n      var focusAnimation = this.state.focusAnimation;\n      var opacity = focusAnimation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, shadeOpacity]\n      });\n      var rippleStyle = {\n        backgroundColor: props.disabled ? disabledColor : color\n      };\n      var shadeStyle = {\n        backgroundColor: shadeColor,\n        borderRadius: shadeBorderRadius,\n        opacity: opacity\n      };\n      return _react.default.createElement(_reactNativeMaterialRipple.default, (0, _extends2.default)({}, props, {\n        style: [_styles.styles.container, rippleStyle, style],\n        onPress: this.onPress,\n        onPressIn: this.onPressIn,\n        onPressOut: this.onPressOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }), children, _react.default.createElement(_reactNative.Animated.View, {\n        style: [_styles.styles.shade, shadeStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return Button;\n}(_react.PureComponent);\n\nexports.default = Button;\nButton.defaultProps = {\n  rippleContainerBorderRadius: 2,\n  rippleSequential: true,\n  hitSlop: {\n    top: 6,\n    right: 4,\n    bottom: 6,\n    left: 4\n  },\n  color: 'rgb(224, 224, 224)',\n  shadeColor: 'rgb(0, 0, 0)',\n  shadeOpacity: 0.12,\n  shadeBorderRadius: 2,\n  focusAnimation: null,\n  focusAnimationDuration: 225,\n  disabledColor: 'rgba(0, 0, 0, .12)',\n  disabled: false\n};\nButton.propTypes = (0, _extends2.default)({}, _reactNativeMaterialRipple.default.propTypes, {\n  color: _propTypes.default.string,\n  shadeColor: _propTypes.default.string,\n  shadeOpacity: _propTypes.default.number,\n  shadeBorderRadius: _propTypes.default.number,\n  focusAnimation: _propTypes.default.instanceOf(_reactNative.Animated.Value),\n  focusAnimationDuration: _propTypes.default.number,\n  disabledColor: _propTypes.default.string\n});","map":{"version":3,"sources":["E:/Vijay_S/Paresh/ReactNativeApp/node_modules/react-native-material-buttons/src/components/button/index.js"],"names":["Button","props","onPress","bind","onPressIn","onPressOut","state","focusAnimation","Animated","Value","focusAnimationDuration","timing","toValue","duration","easing","Easing","out","ease","start","setState","color","disabledColor","shadeColor","shadeOpacity","shadeBorderRadius","style","children","opacity","interpolate","inputRange","outputRange","rippleStyle","backgroundColor","disabled","shadeStyle","borderRadius","styles","container","shade","PureComponent","defaultProps","rippleContainerBorderRadius","rippleSequential","hitSlop","top","right","bottom","left","propTypes","Ripple","PropTypes","string","number","instanceOf"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated, Easing } from 'react-native';\nimport Ripple from 'react-native-material-ripple';\n\nimport { styles } from './styles';\n\nexport default class Button extends PureComponent {\n  static defaultProps = {\n    rippleContainerBorderRadius: 2,\n    rippleSequential: true,\n\n    hitSlop: { top: 6, right: 4, bottom: 6, left: 4 },\n\n    color: 'rgb(224, 224, 224)',\n\n    shadeColor: 'rgb(0, 0, 0)',\n    shadeOpacity: 0.12,\n    shadeBorderRadius: 2,\n\n    focusAnimation: null,\n    focusAnimationDuration: 225,\n\n    disabledColor: 'rgba(0, 0, 0, .12)',\n    disabled: false,\n  };\n\n  static propTypes = {\n    ...Ripple.propTypes,\n\n    color: PropTypes.string,\n\n    shadeColor: PropTypes.string,\n    shadeOpacity: PropTypes.number,\n    shadeBorderRadius: PropTypes.number,\n\n    focusAnimation: PropTypes.instanceOf(Animated.Value),\n    focusAnimationDuration: PropTypes.number,\n\n    disabledColor: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onPress = this.onPress.bind(this);\n    this.onPressIn = this.onPressIn.bind(this);\n    this.onPressOut = this.onPressOut.bind(this);\n\n    this.state = {\n      focusAnimation: this.props.focusAnimation || new Animated.Value(0),\n    };\n  }\n\n  onPress() {\n    let { onPress } = this.props;\n\n    if ('function' === typeof onPress) {\n      onPress();\n    }\n  }\n\n  onPressIn() {\n    let { focusAnimation } = this.state;\n    let { focusAnimationDuration } = this.props;\n\n    Animated\n      .timing(focusAnimation, {\n        toValue: 1,\n        duration: focusAnimationDuration,\n        easing: Easing.out(Easing.ease),\n      })\n      .start();\n  }\n\n  onPressOut() {\n    let { focusAnimation } = this.state;\n    let { focusAnimationDuration } = this.props;\n\n    Animated\n      .timing(focusAnimation, {\n        toValue: 0,\n        duration: focusAnimationDuration,\n        easing: Easing.out(Easing.ease),\n      })\n      .start();\n  }\n\n  componentWillReceiveProps(props) {\n    let { focusAnimation } = props;\n\n    if (focusAnimation && focusAnimation !== this.state.focusAnimation) {\n      this.setState({ focusAnimation });\n    }\n  }\n\n  render() {\n    let { color, disabledColor, shadeColor, shadeOpacity, shadeBorderRadius, style, children, ...props } = this.props;\n    let { focusAnimation } = this.state;\n\n    let opacity = focusAnimation.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, shadeOpacity],\n    });\n\n    let rippleStyle = {\n      backgroundColor: props.disabled? disabledColor : color,\n    };\n\n    let shadeStyle = {\n      backgroundColor: shadeColor,\n      borderRadius: shadeBorderRadius,\n      opacity,\n    };\n\n    return (\n      <Ripple\n        {...props}\n\n        style={[styles.container, rippleStyle, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n      >\n        {children}\n        <Animated.View style={[ styles.shade, shadeStyle ]} />\n      </Ripple>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}